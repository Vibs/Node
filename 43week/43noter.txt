Vi arbejder videre på nodefolio

render.js
    - Vi har lavet render.js-filen i roden af projektet for at lave nogle funktioner som vi kan bruge 
    til at hente en side som laves til en string og bliver rendereret client-side

nodemon.json
    - i denne fil siger vi at nodemon skal registrere ændringer i filer med følgende extensions - altså følgende filtyper:
        "ext": "js, mjs, json, html"


Fillæsning i node.js
    1. readFile()
        - blokerer IKKE - har callback osv.
        - norm
    2. readFileSync()
        - er bare en enkelt linje - den blokerer
        - normal aksla vi ALDRIG vælge det synkrone som blokerer - men her gør det ikke noget, fordi det sker når serveren starter op


// fs tillader at arbejde med filer på min comp - det er IKKE en javascript-ting fordi det er jo browser-client-side
// fs er altså en node-ting


Optional chaining:

    const obj = {};
    console.log(obj.title); 

    - Dette vil IKKE crashe! Den vil bare give undefined - fordi den ikke har en title-værdi
    - Det crasher ikke, fordi vi HAR defineret objektet med {} - derfor kan vi altså godt undersøge om det har en værdi på title
    - Så længe obj er defineret og IKKE er undefined kan man undersøge om den har en værdi på den


// konvereterer den data som kommer til mig, bliver fortolket som json()
app.use(express.json());

// Her gør vi så den kan parse formdata til json
// urlencoded == det er sådan data fra en form bliver sendt afsted
app.use(express.urlencoded({}));

Når vi bruger postman til at simulere at vi sender noget form-data, så skal vi vælge x-www-encoder-noget

HTML 
    -forms 
        - i former plejer man i tags at skriver først, id så name så attributter
        - vi skal bruge name for at kunne se det som key i vores json-obj
            - dvs. hvis man ikke skriver name, og man ikke har inputtet nogle værdier i formen, så vil objektet se sådan ud: {}
                - hvorimod, hvis man skriver name på inputfelterne (og der stadig ikke er nogen værdier inputtet i formen når man submitter),
                så vil json-obj se sådan ud: {id: '', height: ''} - så name-'et for et tag bliver altså tolket som key'en i et json-obj
            - 

Hvordan downloader vi cv? Se cv.html


Hvordan sender vi emails? 
    - nodemailer
    nodemailer.com/about/


    lav ny mappe: util - læg sendEmail.js
slå less secure apps fra - så kan vi sende mails over gmail



Lektier: 
    - gør så vi kan sende en email 
        - kald util-tingen i /api/contact-routen

UGE 44

 
